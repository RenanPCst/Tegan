<div id="Content_Popup_LoadRecipe" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="900" data-tchmi-height="500">

<div id="TcHmiRectangle_popUpBackground_19" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiRectangle" data-tchmi-height="500" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="900" data-tchmi-width-unit="px">
<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "angle": 0.0,
  "stopPoints": [
    {
      "color": "rgba(17, 57, 91, 1)",
      "stop": "25%"
    },
    {
      "color": "rgba(42, 93, 139, 1)",
      "stop": "75%"
    }
  ]
}
</script>
</div>
<div id="TcHmiDatagrid" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiDatagrid"  data-tchmi-height="270" data-tchmi-height-unit="px" data-tchmi-left="20" data-tchmi-left-unit="px" data-tchmi-top="56" data-tchmi-top-unit="px" data-tchmi-width="832" data-tchmi-width-unit="px"  data-tchmi-src-data="%s%PLC1.GVL_HMI.aAvailableFiles%/s%">
    <script data-tchmi-target-attribute="data-tchmi-src-column" type="application/json">
[
  {
    "name": "sMethodName",
    "label": "Method Name",
    "control": "TextBlock",
    "width": 415,
    "widthUnit": "px",
    "resize": true,
    "sortable": false,
    "minWidth": 100,
    "minWidthUnit": "px",
    "editable": false,
    "horizontalAlignment": "Center",
    "verticalAlignment": "Center",
    "headerHorizontalAlignment": "Center",
    "headerVerticalAlignment": "Center",
    "ignoreEscapeSequences": false,
    "autoFocusOut": true,
    "autoSelectText": false
  },
  {
    "name": "sCreatedBy",
    "label": "Created By",
    "control": "TextBlock",
    "width": 150,
    "widthUnit": "px",
    "resize": true,
    "sortable": true,
    "minWidth": 70,
    "minWidthUnit": "px",
    "editable": false,
    "horizontalAlignment": "Center",
    "verticalAlignment": "Center",
    "headerHorizontalAlignment": "Center",
    "headerVerticalAlignment": "Center",
    "ignoreEscapeSequences": false,
    "autoFocusOut": true,
    "autoSelectText": false
  },
  {
    "name": "dCreationDate",
    "label": "Creation Date",
    "control": "TextBlock",
    "width": 150,
    "widthUnit": "px",
    "resize": true,
    "sortable": true,
    "minWidth": 70,
    "minWidthUnit": "px",
    "editable": false,
    "horizontalAlignment": "Center",
    "verticalAlignment": "Center",
    "headerHorizontalAlignment": "Center",
    "headerVerticalAlignment": "Center",
    "ignoreEscapeSequences": false,
    "autoFocusOut": true,
    "autoSelectText": false
  },
  {
    "name": "iRevision",
    "label": "Revision",
    "control": "TextBlock",
    "width": 50,
    "widthUnit": "px",
    "resize": true,
    "sortable": false,
    "minWidth": 70,
    "minWidthUnit": "px",
    "editable": false,
    "horizontalAlignment": "Center",
    "verticalAlignment": "Center",
    "headerHorizontalAlignment": "Center",
    "headerVerticalAlignment": "Center",
    "ignoreEscapeSequences": false,
    "autoFocusOut": true,
    "autoSelectText": false
  }
]
</script>
<script data-tchmi-target-attribute="data-tchmi-src-data" type="application/json">
[
  {
    "Test1": "Example Data",
    "Test2": 42,
    "Test3": true,
    "Test4": "Editable Data"
  },
  {
    "Test1": "Example Data",
    "Test2": 3.1415,
    "Test3": false,
    "Test4": "Editable Data"
  }
]
</script>
<script data-tchmi-target-attribute="data-tchmi-cell-content-padding" type="application/json">
{
  "left": 3,
  "leftUnit": "px",
  "right": 3,
  "rightUnit": "px",
  "top": 0,
  "topUnit": "px",
  "bottom": 0,
  "bottomUnit": "px"
}
</script>

</div>
<div id="TcHmiButton_BtLoadSelectedRecipe" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left="493" data-tchmi-left-unit="px" data-tchmi-text="Load Selected Recipe" data-tchmi-top="376" data-tchmi-top-unit="px" data-tchmi-width="160" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="16" data-tchmi-text-font-weight="Bold">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_BtLoadSelectedRecipe.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "// Reads the available recipe files from the PLC to populate the DataGrid",
          "TcHmi.Symbol.readEx2('%s%PLC1.GVL_HMI.aAvailableFiles%/s%', function(data) {",
          "    if (data.error === TcHmi.Errors.NONE && Array.isArray(data.value)) {",
          "        // Gets the DataGrid control",
          "        const grid = TcHmi.Controls.get('TcHmiDatagrid');",
          "        if (!grid) {",
          "            console.error('DataGrid not found');",
          "            return;",
          "        }",
          "",
          "        // Gets the selected row index in the DataGrid",
          "        const selectedIndex = grid.getSelectedRowIndex();",
          "        if (selectedIndex >= 0 && selectedIndex < data.value.length) {",
          "            // Gets the selected recipe file name",
          "            const selectedFileName = data.value[selectedIndex].sFileName;",
          "            // Remove '.json' extension if needed (PLC expects only the base name)",
          "            const fileNameWithoutExtension = selectedFileName.replace('.json', '');",
          "",
          "            // Writes the selected recipe name to the PLC",
          "            TcHmi.Symbol.writeEx('%s%PLC1.GVL_Recipe.sSelectedRecipeName%/s%', fileNameWithoutExtension, function(result) {",
          "                if (result.error === TcHmi.Errors.NONE) {",
          "                    // Triggers the PLC to load the selected recipe file",
          "                    TcHmi.Symbol.writeEx('%s%PLC1.GVL_HMI.bRecipeLoadFromFile%/s%', true, function(res2) {",
          "                        if (res2.error !== TcHmi.Errors.NONE) {",
          "                            console.error('Error triggering load:', res2.error);",
          "                        } else {",
          "                            // Wait for the PLC to confirm load success or failure (polling flags)",
          "                           \tlet pollCount = 0;",
          "\t\t\t\t\t\t\tconst pollInterval = setInterval(function () {",
          "\t\t\t\t\t\t\t    TcHmi.Symbol.readEx2('%s%PLC1.GVL_HMI.bRecipeCorrectLoaded%/s%', function(resOk) {",
          "\t\t\t\t\t\t\t        TcHmi.Symbol.readEx2('%s%PLC1.GVL_HMI.bRecipeLoadFailed%/s%', function(resFail) {",
          "\t\t\t\t\t\t\t            if (resOk.value === true) {",
          "\t\t\t\t\t\t\t                clearInterval(pollInterval);",
          "\t\t\t\t\t\t\t                alert('Recipe successfully loaded!');",
          "\t\t\t\t\t\t\t                TcHmi.Symbol.writeEx('%s%PLC1.GVL_HMI.bRecipeCorrectLoaded%/s%', false);",
          "\t\t\t\t\t\t\t                TcHmi.Controls.get('TcHmiPopup_LoadRecipe').close();",
          "\t\t\t\t\t\t\t            } else if (resFail.value === true) {",
          "\t\t\t\t\t\t\t                clearInterval(pollInterval);",
          "\t\t\t\t\t\t\t                alert('Error loading Recipe!');",
          "\t\t\t\t\t\t\t                TcHmi.Symbol.writeEx('%s%PLC1.GVL_HMI.bRecipeLoadFailed%/s%', false);",
          "\t\t\t\t\t\t\t                TcHmi.Controls.get('TcHmiPopup_LoadRecipe').close();",
          "\t\t\t\t\t\t\t            } else if (++pollCount > 40) { // Timeout after ~4 seconds",
          "\t\t\t\t\t\t\t                clearInterval(pollInterval);",
          "\t\t\t\t\t\t\t                alert('Timeout: No response from PLC!');",
          "\t\t\t\t\t\t\t                TcHmi.Controls.get('TcHmiPopup_LoadRecipe').close();",
          "\t\t\t\t\t\t\t            }",
          "\t\t\t\t\t\t\t        });",
          "\t\t\t\t\t\t\t    });",
          "\t\t\t\t\t\t\t}, 100); // Checks every 100 ms",
          "                        }",
          "                    });",
          "                } else {",
          "                    console.error('Error writing selected file name:', result.error);",
          "                }",
          "            });",
          "        } else {",
          "            console.warn('No row selected or index out of range');",
          "        }",
          "    } else {",
          "        console.error('Error reading file list:', data.error);",
          "    }",
          "});"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_BtClose" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="60" data-tchmi-height-unit="px" data-tchmi-left="692" data-tchmi-left-unit="px" data-tchmi-text="Close" data-tchmi-top="376" data-tchmi-top-unit="px" data-tchmi-width="160" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="16" data-tchmi-text-font-weight="Bold">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_BtClose.onPressed",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "TcHmiPopup_LoadRecipe",
        "fn": "close",
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock_36" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="86" data-tchmi-left-unit="px" data-tchmi-text="Please Select one Recipe Row" data-tchmi-top="391" data-tchmi-top-unit="px" data-tchmi-width="203" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="16">

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
</div>