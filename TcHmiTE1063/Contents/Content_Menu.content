<div id="Content_Menu" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="1080" data-tchmi-height="1200">

<div id="TcHmiRectangle_MenuBackground" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiRectangle" data-tchmi-height="1200" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="1080" data-tchmi-width-unit="px" data-tchmi-zindex="0">
<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "angle": 0.0,
  "stopPoints": [
    {
      "color": "rgba(255, 255, 255, 1)",
      "stop": "0%"
    },
    {
      "color": "rgba(255, 255, 255, 1)",
      "stop": "38.69%"
    },
    {
      "color": "rgba(170, 170, 170, 1)",
      "stop": "100%"
    }
  ]
}
</script>

        <script data-tchmi-target-attribute="data-tchmi-stroke-color" type="application/json">
            {
            "color": "rgba(185, 185, 185, 1)"
            }
        </script>
    </div>
<div id="TcHmi_Controls_Beckhoff_TcHmiImage_38" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-height="170" data-tchmi-height-unit="px" data-tchmi-left="315" data-tchmi-left-unit="px" data-tchmi-src="Resources/Custom/Images/Teva_Logo.svg" data-tchmi-top="611" data-tchmi-top-unit="px" data-tchmi-width="450" data-tchmi-width-unit="px">
</div>
<div id="TcHmiButton_MenuAlarms" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="100" data-tchmi-left-unit="px" data-tchmi-text="Alarms" data-tchmi-top="150" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">
</div>
<div id="TcHmiButton_MenuIO" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="100" data-tchmi-left-unit="px" data-tchmi-text="IO" data-tchmi-top="260" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">
</div>
<div id="TcHmiButton_MenuUserManag" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="100" data-tchmi-left-unit="px" data-tchmi-text="User Management" data-tchmi-top="370" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_MenuUserManag.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion_Index::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/Content_UserManagement.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_MenuManual" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="430" data-tchmi-left-unit="px" data-tchmi-text="Manual Mode" data-tchmi-top="150" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_MenuManual.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:server#/definitions/PLC1.E_MachineMode",
                  "symbolExpression": "%s%PLC1.GVL_HMI.eMachineMode%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/PLC1.E_MachineMode",
                  "value": 5
                },
                "compareOperator": "!=",
                "logic": null
              },
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:server#/definitions/PLC1.E_MachineMode",
                  "symbolExpression": "%s%PLC1.GVL_HMI.eMachineMode%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/PLC1.E_MachineMode",
                  "value": 4
                },
                "compareOperator": "!=",
                "logic": "AND"
              },
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:server#/definitions/PLC1.E_MachineMode",
                  "symbolExpression": "%s%PLC1.GVL_HMI.eMachineMode%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/PLC1.E_MachineMode",
                  "value": 1
                },
                "compareOperator": "!=",
                "logic": "AND"
              }
            ],
            "then": [
              {
                "objectType": "JavaScript",
                "active": true,
                "sourceLines": [
                  "alert(\"Manual mode can only be activated when the system is in 'Stopped' or 'System Ready' state!\");"
                ],
                "injectContextObject": false,
                "asyncWait": true,
                "waitMode": "Synchronous"
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "ControlApiFunction",
                "active": true,
                "control": "TcHmiPopup_ManualMode",
                "fn": "open",
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_MenuSystemParam" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="430" data-tchmi-left-unit="px" data-tchmi-text="System Parameters" data-tchmi-top="260" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_MenuSystemParam.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%s%PLC1.GVL_HMI.bReloadHMIParameters%/s%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/BOOL",
          "value": true
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion_Index::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/Content_Settings.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_MenuRecipe" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="430" data-tchmi-left-unit="px" data-tchmi-text="Recipes" data-tchmi-top="370" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_MenuRecipe.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion_Index::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/Content_Recipes.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_MenuReports" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="760" data-tchmi-left-unit="px" data-tchmi-text="Reports" data-tchmi-top="150" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">


</div>
<div id="TcHmiButton_MenuReminders" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="760" data-tchmi-left-unit="px" data-tchmi-text="Reminders" data-tchmi-top="260" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">
</div>
<div id="TcHmiButton_MenuLogout" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="80" data-tchmi-height-unit="px" data-tchmi-left="760" data-tchmi-left-unit="px" data-tchmi-text="Logout" data-tchmi-top="370" data-tchmi-top-unit="px" data-tchmi-width="220" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="25" data-tchmi-text-font-weight="Bold">
</div>
<div id="TcHmi_Controls_Beckhoff_TcHmiImage_ExitBt" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-height="70" data-tchmi-height-unit="px" data-tchmi-left="980" data-tchmi-left-unit="px" data-tchmi-src="Resources/Custom/Images/Buttons/turnoffBtIdle.svg" data-tchmi-top="1100" data-tchmi-top-unit="px" data-tchmi-width="70" data-tchmi-width-unit="px">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmi_Controls_Beckhoff_TcHmiImage_ExitBt.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiPopup_Shutdown::TargetFile%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/TcHmi.Controls.System.TcHmiPopup.TargetFile",
          "value": {
            "path": "Contents/Content_Popup_Shutdown.content"
          }
        },
        "asyncWait": true
      },
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "TcHmiPopup_Shutdown",
        "fn": "open",
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock_ASRS" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="70" data-tchmi-height-unit="px" data-tchmi-left="140" data-tchmi-left-unit="px" data-tchmi-text="Andersen Sample Recovery System" data-tchmi-top="820" data-tchmi-top-unit="px" data-tchmi-width="800" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="55" data-tchmi-text-font-weight="Bold" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center">

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(32, 78, 119, 1)"
}
</script>
</div>
<div id="TcHmi_Controls_Beckhoff_TcHmiImage_Info" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-height="70" data-tchmi-height-unit="px" data-tchmi-left="870" data-tchmi-left-unit="px" data-tchmi-src="Resources/Custom/Images/Buttons/infoBt.svg" data-tchmi-top="1100" data-tchmi-top-unit="px" data-tchmi-width="70" data-tchmi-width-unit="px">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmi_Controls_Beckhoff_TcHmiImage_Info.onPressed",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "TcHmiPopup_Info",
        "fn": "open",
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiPopup_Shutdown" data-tchmi-type="TcHmi.Controls.System.TcHmiPopup" data-tchmi-height="400" data-tchmi-height-unit="px" data-tchmi-left="290" data-tchmi-left-unit="px" data-tchmi-top="400" data-tchmi-top-unit="px" data-tchmi-width="500" data-tchmi-width-unit="px" data-tchmi-is-enabled="true" data-tchmi-restore-bounds="false" data-tchmi-movable="false" data-tchmi-modal="true">

<script data-tchmi-target-attribute="data-tchmi-target-file" type="application/json">
{
  "path": "Contents/Content_Popup_Shutdown.content"
}
</script>
</div>
<div id="TcHmiPopup_Info" data-tchmi-type="TcHmi.Controls.System.TcHmiPopup" data-tchmi-height="605" data-tchmi-height-unit="px" data-tchmi-left="205" data-tchmi-left-unit="px" data-tchmi-top="340" data-tchmi-top-unit="px" data-tchmi-width="670" data-tchmi-width-unit="px">

<script data-tchmi-target-attribute="data-tchmi-target-file" type="application/json">
{
  "path": "Contents/Content_Popup_InfoPage.content"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiPopup_Info.onPressed",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "TcHmiPopup_Info",
        "fn": "close",
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>