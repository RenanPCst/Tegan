<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{cebf6aa5-5e58-48d5-8759-1298446923a5}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN

VAR
	// Controle do Eixo
	PosFB				: FB_GetPosition;
	MoveFB				: FB_MotorControl;
	fbSetZero			: MC_SetPosition;
	rCurrentPosition 	: LREAL;
	bGetPosition		: BOOL := FALSE;
	bMoveStart			: BOOL := FALSE;
	bMoveDone			: BOOL;
	bPosError			: BOOL;
	nPosErrorID			: UDINT;

    // Status e Erros
    bPowerStatus  : BOOL;              		// Indica se o motor está habilitado
    bBusy         : BOOL;              		// Indica se o eixo está em movimento
    bDone         : BOOL;              		// Indica que a posição foi atingida
    bError        : BOOL;              		// Indica erro
    nErrorID      : UDINT;             		// Código do erro
	sState		  : STRING;					// String contendo o estado do erro 
	
	//miscelanious variable for testing purporses
	bLockDoors	  	: BOOL 	:= FALSE;	   	// Variable that sends the lock doors signal
	bResetDone		: BOOL;
	bResetError		: BOOL;
	iResetErrorID	: UDINT;
	
	//Instâncias do FB para dois motores
	M1_Motor : FB_MotorControl;
    M2_Motor : FB_MotorControl;
    M3_Motor : FB_MotorControl;

	//Variaveis para a leitura da posicao atual dos motores
	bReadPosition 			: BOOL := FALSE;
	bReadPosValidation		: BOOL;
	bReadPosBusy			: BOOL;
	bReadPositionError		: BOOL;
	iReadPosErrorId			: UDINT;
	rActualPosition			: LREAL;
	
	//Variarives de mudanca de posicao
	bExecutePositionChange	:	BOOL := FALSE;
	bDonePositionChange		:	BOOL;
	bBusyPositionChange		:	BOOL;
	bActivePositionChange	:	BOOL;
	bCommandAborted			:	BOOL;
	bErrorPositionChange	:	BOOL;
	iErrorIDPositionChange	:	UDINT;
	
	rM1Position				:	LREAL;
	rM2Position				:	LREAL;
	rM3Position				:	LREAL;
	
	bZeroDone				:	BOOL;
	bZeroError				:	BOOL;
	nZeroErrorID			:	UDINT;
	bSetZero				:	BOOL := FALSE;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Call State Machine

//PRG_StateMachine(); 
PRG_UpdateVariablesMoving();

//Safety
GVL_IO.bInResetSignal := GVL_Safety.bResetButtonVISU;
GVL_IO.bInAckSignal   := GVL_Safety.bAckButtonVISU;

GVL_Safety.bSafetyRestart 			:= GVL_IO.bInResetSignal;
GVL_Safety.bSafetyErrorAck			:= GVL_IO.bInResetSignal;
GVL_Safety.bSafetyRun				:= TRUE;
GVL_Motion.M1Motor.bTS_Run			:= TRUE;

IF GVL_Safety.bM1STOErrorAck THEN
	GVL_Motion.M1Motor.bTS_ErrorAck := TRUE;
ELSE
	GVL_Motion.M1Motor.bTS_ErrorAck := FALSE;
END_IF

IF bLockDoors THEN
	GVL_Safety.SafetyOutputs.bLockDoorSafety := TRUE;
	ELSE
	GVL_Safety.SafetyOutputs.bLockDoorSafety := FALSE;
END_IF

//teste de movimento dos motores M1, M2 e M3

//Obter a posição atual do motor M1
IF bGetPosition THEN	
	PosFB(
		bEnable			:=	bGetPosition,
		AxisRef			:=	GVL_Motion.M1Motor.Axis,
		bError			=>	bPosError,
		nErrorID		=>	nPosErrorID,
		rPosition		=>	rM1Position
	);
END_IF

//Obter a posição atual do motor M2
IF bGetPosition THEN	
	PosFB(
		bEnable			:=	bGetPosition,
		AxisRef			:=	GVL_Motion.M2Motor.Axis,
		bError			=>	bPosError,
		nErrorID		=>	nPosErrorID,
		rPosition		=>	rM2Position
	);
END_IF

//Obter a posição atual do motor M3
IF bGetPosition THEN	
	PosFB(
		bEnable			:=	bGetPosition,
		AxisRef			:=	GVL_Motion.M3Motor.Axis,
		bError			=>	bPosError,
		nErrorID		=>	nPosErrorID,
		rPosition		=>	rM3Position
	);		
END_IF

GVL_Motion.M1Motor.iPosition 		:= 0;
GVL_Motion.M1Motor.qTargetVelocity	:= 15;

GVL_Motion.M3Motor.iTargetPosition	:= 0;
GVL_Motion.M3Motor.iTargetVelocity	:= 5;

GVL_Motion.M2Motor.iTargetPosition	:= 0;
GVL_Motion.M2Motor.iTargetVelocity	:= 5;

//Set position 0
fbSetZero(
    Execute := bSetZero,
    Axis := GVL_Motion.M3Motor.Axis,
    Position := 0.0,  // Define a posição atual como zero
    Done => bZeroDone,
    Error => bZeroError,
    ErrorID => nZeroErrorID
);

//Moving the motor 3 for testing purposes
IF bMoveStart AND GVL_Safety.iMotorsSTOEnabled THEN
    MoveFB(
        bEnable 	:= TRUE,
        AxisRef 	:= GVL_Motion.M2Motor.Axis, 
        nPosition 	:= GVL_Motion.M2Motor.iTargetPosition, 
        nVelocity 	:= GVL_Motion.M2Motor.iTargetVelocity,
        bDone		=> bMoveDone,
        bError		=> bPosError,
        nErrorID	=> nPosErrorID,
        sState		=> sState
    );
END_IF

// Reset bMoveStart_M1 when move is completed
IF bMoveDone THEN
    bMoveStart := FALSE;
END_IF



]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="744" Count="0" />
      <LineId Id="751" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="1388" Count="0" />
      <LineId Id="1386" Count="0" />
      <LineId Id="865" Count="0" />
      <LineId Id="976" Count="0" />
      <LineId Id="872" Count="0" />
      <LineId Id="871" Count="0" />
      <LineId Id="868" Count="2" />
      <LineId Id="1158" Count="0" />
      <LineId Id="1467" Count="1" />
      <LineId Id="1472" Count="0" />
      <LineId Id="1469" Count="0" />
      <LineId Id="1471" Count="0" />
      <LineId Id="1470" Count="0" />
      <LineId Id="1194" Count="0" />
      <LineId Id="1193" Count="0" />
      <LineId Id="1195" Count="0" />
      <LineId Id="1197" Count="1" />
      <LineId Id="1196" Count="0" />
      <LineId Id="866" Count="0" />
      <LineId Id="821" Count="0" />
      <LineId Id="1678" Count="0" />
      <LineId Id="1667" Count="8" />
      <LineId Id="1706" Count="0" />
      <LineId Id="1685" Count="9" />
      <LineId Id="1684" Count="0" />
      <LineId Id="1696" Count="9" />
      <LineId Id="1666" Count="0" />
      <LineId Id="1581" Count="0" />
      <LineId Id="1579" Count="0" />
      <LineId Id="1584" Count="0" />
      <LineId Id="1745" Count="0" />
      <LineId Id="1744" Count="0" />
      <LineId Id="1746" Count="0" />
      <LineId Id="1748" Count="0" />
      <LineId Id="1747" Count="0" />
      <LineId Id="1749" Count="0" />
      <LineId Id="1707" Count="0" />
      <LineId Id="1580" Count="0" />
      <LineId Id="1709" Count="7" />
      <LineId Id="1708" Count="0" />
      <LineId Id="1537" Count="0" />
      <LineId Id="1727" Count="15" />
      <LineId Id="1312" Count="0" />
      <LineId Id="1322" Count="0" />
      <LineId Id="1078" Count="0" />
      <LineId Id="951" Count="0" />
      <LineId Id="767" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>