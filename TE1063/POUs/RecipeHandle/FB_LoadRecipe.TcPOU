<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_LoadRecipe" Id="{fdbedb76-49e0-47f1-8b40-c95081ed8fdc}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_LoadRecipe
VAR_INPUT
	sFileName : STRING(255); // Ex: 'C:\TwinCAT\Recipes\NomeDaReceita.json'
    bExecute  : BOOL;
END_VAR
VAR_OUTPUT
	bBusy   : BOOL;
    bDone   : BOOL;
    bError  : BOOL;
    nErrId  : UDINT;
END_VAR
VAR
	fbFileOpen  : FB_FileOpen;
    fbFileRead  : FB_FileRead;
    fbFileClose : FB_FileClose;
    fbJson      : FB_JsonDomParser;

    hFile    : UINT;
    sBuffer  : STRING(8192);
    jsonRoot : SJsonValue;
    jsonVal  : SJsonValue;
    idx      : INT;
    step     : INT;

    sPath    : STRING(255);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE step OF
0:
    IF bExecute THEN
        bBusy := TRUE;
        bDone := FALSE;
        bError := FALSE;
        nErrId := 0;

        fbFileOpen(
            sNetId := '',
            sPathName := sFileName,
            nMode := FOPEN_MODEREAD OR FOPEN_MODETEXT,
            bExecute := TRUE
        );

        step := 10;
    END_IF

10:
    fbFileOpen(bExecute := FALSE);
    IF NOT fbFileOpen.bBusy THEN
        IF fbFileOpen.bError THEN
            bError := TRUE;
            nErrId := fbFileOpen.nErrId;
            step := 100;
        ELSE
            hFile := fbFileOpen.hFile;
            fbFileRead(
                sNetId := '',
                hFile := hFile,
                pReadBuff := ADR(sBuffer),
                cbReadLen := SIZEOF(sBuffer),
                bExecute := TRUE
            );
            step := 20;
        END_IF
    END_IF

20:
    fbFileRead(bExecute := FALSE);
    IF NOT fbFileRead.bBusy THEN
        IF fbFileRead.bError THEN
            bError := TRUE;
            nErrId := fbFileRead.nErrId;
            step := 90;
        ELSE
            fbFileClose(sNetId := '', hFile := hFile, bExecute := TRUE);
            step := 30;
        END_IF
    END_IF

30:
    fbFileClose(bExecute := FALSE);
    IF NOT fbFileClose.bBusy THEN
        IF fbFileClose.bError THEN
            bError := TRUE;
            nErrId := fbFileClose.nErrId;
            step := 100;
        ELSE
            step := 40;
        END_IF
    END_IF

40:
    IF TO_LINT(fbJson.ParseDocument(sBuffer)) <> S_OK THEN
        bError := TRUE;
        nErrId := TO_UDINT(fbJson.initStatus);
        step := 100;
    ELSE
        jsonRoot := fbJson.GetDocumentRoot();
        step := 50;
    END_IF

50:
    sPath := 'stInfo/sMethodName';
    GVL_Recipe.stCurrentRecipe.stInfo.sMethodName := fbJson.GetString(fbJson.FindMemberPath(jsonRoot, sPath));

    sPath := 'stInfo/sCreatedBy';
    GVL_Recipe.stCurrentRecipe.stInfo.sCreatedBy := fbJson.GetString(fbJson.FindMemberPath(jsonRoot, sPath));

    sPath := 'stInfo/dCreationDate';
    GVL_Recipe.stCurrentRecipe.stInfo.dCreationDate := STRING_TO_DATE(fbJson.GetString(fbJson.FindMemberPath(jsonRoot, sPath)));

    sPath := 'stInfo/iRevision';
    GVL_Recipe.stCurrentRecipe.stInfo.iRevision := fbJson.GetInt(fbJson.FindMemberPath(jsonRoot, sPath));

    FOR idx := 1 TO 4 DO
        sPath := CONCAT('stSolventsTimes/aSolventN#', INT_TO_STRING(idx-1));
        GVL_Recipe.stCurrentRecipe.stSolventsTimes.aSolventN[idx] := TO_USINT(fbJson.GetInt(fbJson.FindMemberPath(jsonRoot, sPath)));

        sPath := CONCAT('stSolventsTimes/aTime#', INT_TO_STRING(idx-1));
        GVL_Recipe.stCurrentRecipe.stSolventsTimes.aTime[idx] := STRING_TO_TIME(fbJson.GetString(fbJson.FindMemberPath(jsonRoot, sPath)));

        sPath := CONCAT('stSolventsTimes/aVelocity#', INT_TO_STRING(idx-1));
        GVL_Recipe.stCurrentRecipe.stSolventsTimes.aVelocity[idx] := TO_INT(fbJson.GetInt(fbJson.FindMemberPath(jsonRoot, sPath)));
    END_FOR

    FOR idx := 1 TO 4 DO
        sPath := CONCAT('stVolumes/aT_IC_Volume#', INT_TO_STRING(idx-1));
        GVL_Recipe.stCurrentRecipe.stVolumes.aT_IC_Volume[idx] := fbJson.GetDouble(fbJson.FindMemberPath(jsonRoot, sPath));
    END_FOR

    sPath := 'stOtherParams/tSoakTime';
    GVL_Recipe.stCurrentRecipe.stOtherParams.tSoakTime := STRING_TO_TIME(fbJson.GetString(fbJson.FindMemberPath(jsonRoot, sPath)));

    step := 100;

90:
    fbFileClose(sNetId := '', hFile := hFile, bExecute := TRUE);
    step := 100;

100:
    bBusy := FALSE;
    bDone := NOT bError;
    IF NOT bExecute THEN
        step := 0;
    END_IF
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_LoadRecipe">
      <LineId Id="916" Count="116" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>