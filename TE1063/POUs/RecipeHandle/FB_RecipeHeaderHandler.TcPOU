<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_RecipeHeaderHandler" Id="{3a282dd4-91de-4b2b-b71c-941e4b67bb20}" SpecialFunc="None">
    <Declaration><![CDATA[// FB_RecipeHeaderHandler: Extracts metadata from a recipe JSON file and fills one entry in GVL_Recipe.aAvailableFiles
FUNCTION_BLOCK FB_RecipeHeaderHandler
VAR_INPUT
	sFileName       : STRING(255);
    iTargetIndex    : INT; // Index to write into array GVL_Recipe.aAvailableFiles
    bExecute        : BOOL;
END_VAR
VAR_OUTPUT
	bBusy  : BOOL;
    bError : BOOL;
    bDone  : BOOL;
    nErrId : UDINT;
END_VAR
VAR
	iStep         : INT;
    hFile         : UINT;
    sBuffer       : STRING(8192);
    fbFileOpen    : FB_FileOpen;
    fbFileRead    : FB_FileRead;
    fbFileClose   : FB_FileClose;
    fbJson        : FB_JsonDomParser;
    jsonDoc       : SJsonValue;
    jsonProp      : SJsonValue;
	bExecutePrev : BOOL; 
    bStart       : BOOL;
	iCount		 : UINT := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[bStart := bExecute AND NOT bExecutePrev;
bExecutePrev := bExecute;

CASE iStep OF

0:
     IF bExecute THEN //bStart
        //bBusy := TRUE;
        bDone := FALSE;
        bError := FALSE;
        nErrId := 0;

        fbFileOpen(
            sNetId := '',
            sPathName := sFileName,
            nMode := FOPEN_MODEREAD OR FOPEN_MODETEXT,
            bExecute := TRUE,
			hFile => hFile
        );
		IF NOT fbFileOpen.bBusy AND NOT fbFileOpen.bError THEN
			iStep := 10;
		END_IF
        
    END_IF

10:
    fbFileOpen(
        sNetId := '',
        sPathName := sFileName,
        nMode := FOPEN_MODEREAD OR FOPEN_MODETEXT,
        bExecute := FALSE
    );
    IF NOT fbFileOpen.bBusy THEN
        IF fbFileOpen.bError THEN
            bError := TRUE;
            nErrId := fbFileOpen.nErrId;
            iStep := 100;
        ELSE
            hFile := fbFileOpen.hFile;
            fbFileRead(
                sNetId := '',
                hFile := hFile,
                pReadBuff := ADR(sBuffer),
                cbReadLen := SIZEOF(sBuffer),
                bExecute := TRUE
            );
            iStep := 20;
        END_IF
    END_IF

20:
    fbFileRead(
        sNetId := '',
        hFile := hFile,
        pReadBuff := ADR(sBuffer),
        cbReadLen := SIZEOF(sBuffer),
        bExecute := FALSE
    );
    IF NOT fbFileRead.bBusy THEN
        IF fbFileRead.bError THEN
            bError := TRUE;
            nErrId := fbFileRead.nErrId;
            iStep := 100;
        ELSE
            fbFileClose(
                sNetId := '',
                hFile := hFile,
                bExecute := TRUE
            );
            iStep := 30;
        END_IF
    END_IF

30:
    fbFileClose(
        sNetId := '',
        hFile := hFile,
        bExecute := FALSE
    );
    IF NOT fbFileClose.bBusy THEN
        IF fbFileClose.bError THEN
            bError := TRUE;
            nErrId := fbFileClose.nErrId;
            iStep := 100;
        ELSE
            jsonDoc := fbJson.ParseDocument(sBuffer);
            IF jsonDoc = 0 THEN
                iStep := 35;
            ELSE
                iStep := 40;
            END_IF
        END_IF
    END_IF

35:
	IF iCount > 10 THEN 
		bError := TRUE;
		nErrId := 16#F1000001; // Custom error code for invalid JSON
		iStep := 100;
	ELSE
		jsonDoc := 0;
		jsonProp := 0;
		sBuffer := '';
		iCount := iCount + 1;
		iStep := 0;
	END_IF
	
40:
    // Extract sCreatedBy
	jsonProp := fbJson.FindMemberPath(jsonDoc, 'stInfo/sCreatedBy');
	GVL_Recipe.aAvailableFiles[iTargetIndex].sCreatedBy := fbJson.GetString(jsonProp);

    // Extract dCreationDate
    jsonProp := fbJson.FindMemberPath(jsonDoc, 'stInfo/dCreationDate');
    GVL_Recipe.aAvailableFiles[iTargetIndex].dCreationDate := STRING_TO_DATE(fbJson.GetString(jsonProp));

    // Extract iRevision
    jsonProp := fbJson.FindMemberPath(jsonDoc, 'stInfo/iRevision');
    GVL_Recipe.aAvailableFiles[iTargetIndex].iRevision := TO_INT(fbJson.GetInt(jsonProp));

    iStep := 100;

100:
    bBusy := FALSE;
    bDone := TRUE;
	icount := 0;
    IF NOT bExecute THEN
        iStep := 0;
    END_IF

END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_RecipeHeaderHandler">
      <LineId Id="1308" Count="0" />
      <LineId Id="1307" Count="0" />
      <LineId Id="1309" Count="0" />
      <LineId Id="1193" Count="2" />
      <LineId Id="1310" Count="10" />
      <LineId Id="1325" Count="0" />
      <LineId Id="1321" Count="1" />
      <LineId Id="1326" Count="1" />
      <LineId Id="1323" Count="0" />
      <LineId Id="1210" Count="63" />
      <LineId Id="1276" Count="5" />
      <LineId Id="1363" Count="1" />
      <LineId Id="1371" Count="0" />
      <LineId Id="1381" Count="1" />
      <LineId Id="1372" Count="0" />
      <LineId Id="1375" Count="0" />
      <LineId Id="1377" Count="3" />
      <LineId Id="1376" Count="0" />
      <LineId Id="1373" Count="0" />
      <LineId Id="1369" Count="0" />
      <LineId Id="1283" Count="1" />
      <LineId Id="1362" Count="0" />
      <LineId Id="1361" Count="0" />
      <LineId Id="1287" Count="13" />
      <LineId Id="1383" Count="0" />
      <LineId Id="1301" Count="3" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>