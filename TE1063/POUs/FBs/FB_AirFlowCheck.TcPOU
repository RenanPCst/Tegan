<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_AirFlowCheck" Id="{a48de8b8-7051-4c87-a9e3-464f1e624d2c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AirFlowCheck

VAR_INPUT
    iRawSensorValue     : INT;   // Raw sensor value (16-bit)
    iSensorID           : INT;   // Sensor ID (1 = Festo, 2 = SMC)
    rPressureThreshold  : REAL;  // Minimum air pressure threshold
    tStabilizationTime  : TIME;  // Required stabilization time
    bExecute            : BOOL;  // Signal to start verification
END_VAR

VAR_OUTPUT
    bAirFlowOK      : BOOL;  // Indicates if the airflow is within acceptable limits
    bAirFlowError   : BOOL;  // Indicates if there was an airflow failure
END_VAR

VAR
    TON_Stabilization   : TON;              // Stabilization timer
    FB_SensorScaling    : FB_SensorScaling; // Instance of FB to convert sensor data
    rConvertedPressure  : REAL;             // Scaled pressure value
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// If execution is active, start verification
IF bExecute THEN
    
    // 1. Convert the raw sensor value before checking airflow
    FB_SensorScaling(
        bExecute   := TRUE,
        iRawValue  := iRawSensorValue,
        iSensorID  := iSensorID,
        bDone      => ,
        rPressure  => rConvertedPressure
    );

    // 2. If converted pressure is above the threshold, start the stabilization timer
    IF rConvertedPressure >= rPressureThreshold THEN
        TON_Stabilization(IN := TRUE, PT := tStabilizationTime);

        // 3. If the stabilization time has been reached, consider airflow as OK
        IF TON_Stabilization.Q THEN
            bAirFlowOK     := TRUE;
            bAirFlowError  := FALSE;
        END_IF;

    ELSE
        // 4. If the pressure is insufficient, reset the timer and generate an error
        TON_Stabilization(IN := FALSE);
        bAirFlowOK     := FALSE;
        bAirFlowError  := TRUE;
    END_IF;

ELSE
    // 5. Reset outputs when not running
    TON_Stabilization(IN := FALSE);
    bAirFlowOK     := FALSE;
    bAirFlowError  := FALSE;
END_IF;]]></ST>
    </Implementation>
    <LineIds Name="FB_AirFlowCheck">
      <LineId Id="117" Count="2" />
      <LineId Id="170" Count="0" />
      <LineId Id="121" Count="29" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>