<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_PumpControl" Id="{e352acee-8283-4963-a788-eaa727e77287}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PumpControl

VAR_INPUT
	rVolume : REAL;             //Volume a ser dispensado em mililitros 
    iVelocity : INT;            //Velocidade da bomba em RPM 
    bDirection : BOOL;          //Direção da bomba: TRUE = Forward, FALSE = Reverse 
    tRunTime : TIME := T#0S;    //Tempo de operação, usado em recirculação. Opcional 
END_VAR

VAR_OUTPUT
	bDone : BOOL;               //Indica que a operação foi concluída 
    bError : BOOL;              //Indica que houve erro durante a operação 
END_VAR

VAR
	rTotalRevolutions : REAL;   //Total de revoluções necessárias para atingir o volume 
    rRevolutionsCompleted : REAL; //Revoluções concluídas 
    Timer : TON;               //Temporizador para recirculação ou operação baseada em tempo 
    bRunning : BOOL;            //Flag para indicar operação em andamento
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF rVolume > 0 THEN
    rTotalRevolutions := rVolume / 0.01; //1 revolution = 0.01 ml - Hipotesys 
ELSE
    rTotalRevolutions := 0; //Operação baseada apenas em tempo
END_IF;

//Lógica principal
IF NOT bRunning THEN
    //iniciar operação
    rRevolutionsCompleted := 0;
    bRunning := TRUE;

    IF tRunTime > T#0S THEN
        //Operação baseada em tempo
        Timer(IN := TRUE, PT := tRunTime);
    END_IF;
END_IF;

IF bRunning THEN
    IF Timer.Q THEN
        //Operação baseada em tempo concluída
        bDone := TRUE;
        bRunning := FALSE;
    ELSE
        //Operação baseada em volume
        IF rRevolutionsCompleted < rTotalRevolutions THEN
            //Simular a rotação da bomba com base na velocidade
            rRevolutionsCompleted := rRevolutionsCompleted + (REAL(iVelocity) * 0.01); //Incremento por ciclo
        ELSE
            //Volume atingido *)
            bDone := TRUE;
            bRunning := FALSE;
        END_IF;
    END_IF;
END_IF;

//Tratamento de erros
IF rTotalRevolutions < 0 OR iVelocity <= 0 THEN
    bError := TRUE;
    bDone := FALSE;
    bRunning := FALSE;
END_IF;]]></ST>
    </Implementation>
    <LineIds Name="FB_PumpControl">
      <LineId Id="23" Count="40" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>